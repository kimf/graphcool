type Course @model {
  club: String!
  events: [Event!]! @relation(name: "EventCourse")
  holes: [Hole!]! @relation(name: "CourseHoles")
  id: ID! @isUnique
  lat: String
  lng: String
  name: String!
  oldId: Int
  par: Int!
  scoringSessions: [ScoringSession!]! @relation(name: "ScoringSessionCourse")
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Event @model {
  course: Course @relation(name: "EventCourse")
  eventLeaderboards: [EventLeaderboard!]! @relation(name: "EventLeaderboards")
  id: ID! @isUnique
  liveScores: [LiveScore!]! @relation(name: "EventLiveScore")
  oldCourseName: String
  oldId: Int
  scores: [Score!]! @relation(name: "EventScore")
  scoringSessions: [ScoringSession!]! @relation(name: "ScoringSessionEvent")
  scoringType: String! @defaultValue(value: "strokes")
  season: Season @relation(name: "SeasonEvent")
  startsAt: DateTime!
  status: String! @defaultValue(value: "planned")
  teamEvent: Boolean! @defaultValue(value: false)
  createdAt: DateTime!
  updatedAt: DateTime!
}

type EventLeaderboard @model {
  event: Event @relation(name: "EventLeaderboards")
  id: ID! @isUnique
  position: Int! @defaultValue(value: 0)
  previousTotalPosition: Int! @defaultValue(value: 0)
  score: Score @relation(name: "ScoreEventLeaderboard")
  totalAveragePoints: Float! @defaultValue(value: 0.0)
  totalEventCount: Int! @defaultValue(value: 0)
  totalEventPoints: Float! @defaultValue(value: 0.0)
  totalPosition: Int! @defaultValue(value: 0)
  createdAt: DateTime!
  updatedAt: DateTime!
}

type File @model {
  contentType: String!
  id: ID! @isUnique
  name: String!
  season: Season @relation(name: "SeasonPhoto")
  secret: String! @isUnique
  size: Int!
  url: String! @isUnique
  user: User @relation(name: "UserPhoto")
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Hole @model {
  course: Course @relation(name: "CourseHoles")
  id: ID! @isUnique
  index: Int!
  liveScores: [LiveScore!]! @relation(name: "LiveScoreHole")
  number: Int!
  par: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type LiveScore @model {
  beers: Int
  event: Event @relation(name: "EventLiveScore")
  extraStrokes: Int! @defaultValue(value: 0)
  hole: Hole @relation(name: "LiveScoreHole")
  id: ID! @isUnique
  points: Int
  putts: Int!
  scoringPlayer: ScoringPlayer @relation(name: "ScoringPlayerLiveScores")
  scoringSession: ScoringSession @relation(name: "ScoringSessionLiveScore")
  scoringTeam: ScoringTeam @relation(name: "ScoringTeamLiveScores")
  strokes: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Score @model {
  beers: Int! @defaultValue(value: 0)
  event: Event @relation(name: "EventScore")
  eventLeaderboard: EventLeaderboard @relation(name: "ScoreEventLeaderboard")
  eventPoints: Int! @defaultValue(value: 0)
  id: ID! @isUnique
  kr: Int! @defaultValue(value: 0)
  oldId: Int
  user: User @relation(name: "UserScore")
  value: Int! @defaultValue(value: 0)
  createdAt: DateTime!
  updatedAt: DateTime!
}

type ScoringPlayer @model {
  extraStrokes: Int!
  id: ID! @isUnique
  liveScores: [LiveScore!]! @relation(name: "ScoringPlayerLiveScores")
  scoringSession: ScoringSession @relation(name: "ScoringPlayerScoringSession")
  user: User @relation(name: "ScoringPlayerUser")
  createdAt: DateTime!
  updatedAt: DateTime!
}

type ScoringSession @model {
  course: Course @relation(name: "ScoringSessionCourse")
  currentHole: Int! @defaultValue(value: 1)
  event: Event @relation(name: "ScoringSessionEvent")
  id: ID! @isUnique
  liveScores: [LiveScore!]! @relation(name: "ScoringSessionLiveScore")
  scorer: User @relation(name: "ScoringSessionScorer")
  scoringPlayers: [ScoringPlayer!]! @relation(name: "ScoringPlayerScoringSession")
  scoringTeams: [ScoringTeam!]! @relation(name: "ScoringTeamScoringSession")
  status: String! @defaultValue(value: "live")
  createdAt: DateTime!
  updatedAt: DateTime!
}

type ScoringTeam @model {
  extraStrokes: Int!
  id: ID! @isUnique
  liveScores: [LiveScore!]! @relation(name: "ScoringTeamLiveScores")
  scoringSession: ScoringSession @relation(name: "ScoringTeamScoringSession")
  users: [User!]! @relation(name: "ScoringTeamUser")
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Season @model {
  closed: Boolean! @defaultValue(value: false)
  events: [Event!]! @relation(name: "SeasonEvent")
  id: ID! @isUnique
  name: String!
  oldId: Int
  photo: File @relation(name: "SeasonPhoto")
  seasonLeaderboards: [SeasonLeaderboard!]! @relation(name: "SeasonLeaderboards")
  createdAt: DateTime!
  updatedAt: DateTime!
}

type SeasonLeaderboard @model {
  averagePoints: Float! @defaultValue(value: 0.0)
  eventCount: Int! @defaultValue(value: 0)
  id: ID! @isUnique
  position: Int! @defaultValue(value: 0)
  previousPosition: Int! @defaultValue(value: 0)
  season: Season @relation(name: "SeasonLeaderboards")
  top5Points: [Float!]!
  totalBeers: Int! @defaultValue(value: 0)
  totalKr: Int! @defaultValue(value: 0)
  totalPoints: Float! @defaultValue(value: 0.0)
  user: User @relation(name: "UserSeasonLeaderboard")
  createdAt: DateTime!
  updatedAt: DateTime!
}

type User @model {
  email: String @isUnique
  firstName: String!
  id: ID! @isUnique
  lastName: String!
  oldId: Int
  password: String
  photo: File @relation(name: "UserPhoto")
  scores: [Score!]! @relation(name: "UserScore")
  scoringPlayers: [ScoringPlayer!]! @relation(name: "ScoringPlayerUser")
  scoringSession: ScoringSession @relation(name: "ScoringSessionScorer")
  scoringTeams: [ScoringTeam!]! @relation(name: "ScoringTeamUser")
  seasonLeaderboards: [SeasonLeaderboard!]! @relation(name: "UserSeasonLeaderboard")
  createdAt: DateTime!
  updatedAt: DateTime!
}
